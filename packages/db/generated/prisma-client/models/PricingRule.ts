
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `PricingRule` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model PricingRule
 * 
 */
export type PricingRuleModel = runtime.Types.Result.DefaultSelection<Prisma.$PricingRulePayload>

export type AggregatePricingRule = {
  _count: PricingRuleCountAggregateOutputType | null
  _avg: PricingRuleAvgAggregateOutputType | null
  _sum: PricingRuleSumAggregateOutputType | null
  _min: PricingRuleMinAggregateOutputType | null
  _max: PricingRuleMaxAggregateOutputType | null
}

export type PricingRuleAvgAggregateOutputType = {
  day_of_week: number | null
  base_price: runtime.Decimal | null
}

export type PricingRuleSumAggregateOutputType = {
  day_of_week: number | null
  base_price: runtime.Decimal | null
}

export type PricingRuleMinAggregateOutputType = {
  id: string | null
  day_of_week: number | null
  start_time: Date | null
  end_time: Date | null
  base_price: runtime.Decimal | null
  sub_field_id: string | null
  is_dynamic: boolean | null
}

export type PricingRuleMaxAggregateOutputType = {
  id: string | null
  day_of_week: number | null
  start_time: Date | null
  end_time: Date | null
  base_price: runtime.Decimal | null
  sub_field_id: string | null
  is_dynamic: boolean | null
}

export type PricingRuleCountAggregateOutputType = {
  id: number
  day_of_week: number
  start_time: number
  end_time: number
  base_price: number
  sub_field_id: number
  is_dynamic: number
  dynamic_config: number
  _all: number
}


export type PricingRuleAvgAggregateInputType = {
  day_of_week?: true
  base_price?: true
}

export type PricingRuleSumAggregateInputType = {
  day_of_week?: true
  base_price?: true
}

export type PricingRuleMinAggregateInputType = {
  id?: true
  day_of_week?: true
  start_time?: true
  end_time?: true
  base_price?: true
  sub_field_id?: true
  is_dynamic?: true
}

export type PricingRuleMaxAggregateInputType = {
  id?: true
  day_of_week?: true
  start_time?: true
  end_time?: true
  base_price?: true
  sub_field_id?: true
  is_dynamic?: true
}

export type PricingRuleCountAggregateInputType = {
  id?: true
  day_of_week?: true
  start_time?: true
  end_time?: true
  base_price?: true
  sub_field_id?: true
  is_dynamic?: true
  dynamic_config?: true
  _all?: true
}

export type PricingRuleAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which PricingRule to aggregate.
   */
  where?: Prisma.PricingRuleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PricingRules to fetch.
   */
  orderBy?: Prisma.PricingRuleOrderByWithRelationInput | Prisma.PricingRuleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.PricingRuleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PricingRules from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PricingRules.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned PricingRules
  **/
  _count?: true | PricingRuleCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: PricingRuleAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: PricingRuleSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: PricingRuleMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: PricingRuleMaxAggregateInputType
}

export type GetPricingRuleAggregateType<T extends PricingRuleAggregateArgs> = {
      [P in keyof T & keyof AggregatePricingRule]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregatePricingRule[P]>
    : Prisma.GetScalarType<T[P], AggregatePricingRule[P]>
}




export type PricingRuleGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PricingRuleWhereInput
  orderBy?: Prisma.PricingRuleOrderByWithAggregationInput | Prisma.PricingRuleOrderByWithAggregationInput[]
  by: Prisma.PricingRuleScalarFieldEnum[] | Prisma.PricingRuleScalarFieldEnum
  having?: Prisma.PricingRuleScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: PricingRuleCountAggregateInputType | true
  _avg?: PricingRuleAvgAggregateInputType
  _sum?: PricingRuleSumAggregateInputType
  _min?: PricingRuleMinAggregateInputType
  _max?: PricingRuleMaxAggregateInputType
}

export type PricingRuleGroupByOutputType = {
  id: string
  day_of_week: number
  start_time: Date
  end_time: Date
  base_price: runtime.Decimal
  sub_field_id: string
  is_dynamic: boolean
  dynamic_config: runtime.JsonValue | null
  _count: PricingRuleCountAggregateOutputType | null
  _avg: PricingRuleAvgAggregateOutputType | null
  _sum: PricingRuleSumAggregateOutputType | null
  _min: PricingRuleMinAggregateOutputType | null
  _max: PricingRuleMaxAggregateOutputType | null
}

type GetPricingRuleGroupByPayload<T extends PricingRuleGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<PricingRuleGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof PricingRuleGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], PricingRuleGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], PricingRuleGroupByOutputType[P]>
      }
    >
  >



export type PricingRuleWhereInput = {
  AND?: Prisma.PricingRuleWhereInput | Prisma.PricingRuleWhereInput[]
  OR?: Prisma.PricingRuleWhereInput[]
  NOT?: Prisma.PricingRuleWhereInput | Prisma.PricingRuleWhereInput[]
  id?: Prisma.UuidFilter<"PricingRule"> | string
  day_of_week?: Prisma.IntFilter<"PricingRule"> | number
  start_time?: Prisma.DateTimeFilter<"PricingRule"> | Date | string
  end_time?: Prisma.DateTimeFilter<"PricingRule"> | Date | string
  base_price?: Prisma.DecimalFilter<"PricingRule"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  sub_field_id?: Prisma.UuidFilter<"PricingRule"> | string
  is_dynamic?: Prisma.BoolFilter<"PricingRule"> | boolean
  dynamic_config?: Prisma.JsonNullableFilter<"PricingRule">
  sub_field?: Prisma.XOR<Prisma.SubFieldScalarRelationFilter, Prisma.SubFieldWhereInput>
}

export type PricingRuleOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  day_of_week?: Prisma.SortOrder
  start_time?: Prisma.SortOrder
  end_time?: Prisma.SortOrder
  base_price?: Prisma.SortOrder
  sub_field_id?: Prisma.SortOrder
  is_dynamic?: Prisma.SortOrder
  dynamic_config?: Prisma.SortOrderInput | Prisma.SortOrder
  sub_field?: Prisma.SubFieldOrderByWithRelationInput
}

export type PricingRuleWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  sub_field_id_day_of_week_start_time_end_time?: Prisma.PricingRuleSub_field_idDay_of_weekStart_timeEnd_timeCompoundUniqueInput
  AND?: Prisma.PricingRuleWhereInput | Prisma.PricingRuleWhereInput[]
  OR?: Prisma.PricingRuleWhereInput[]
  NOT?: Prisma.PricingRuleWhereInput | Prisma.PricingRuleWhereInput[]
  day_of_week?: Prisma.IntFilter<"PricingRule"> | number
  start_time?: Prisma.DateTimeFilter<"PricingRule"> | Date | string
  end_time?: Prisma.DateTimeFilter<"PricingRule"> | Date | string
  base_price?: Prisma.DecimalFilter<"PricingRule"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  sub_field_id?: Prisma.UuidFilter<"PricingRule"> | string
  is_dynamic?: Prisma.BoolFilter<"PricingRule"> | boolean
  dynamic_config?: Prisma.JsonNullableFilter<"PricingRule">
  sub_field?: Prisma.XOR<Prisma.SubFieldScalarRelationFilter, Prisma.SubFieldWhereInput>
}, "id" | "sub_field_id_day_of_week_start_time_end_time">

export type PricingRuleOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  day_of_week?: Prisma.SortOrder
  start_time?: Prisma.SortOrder
  end_time?: Prisma.SortOrder
  base_price?: Prisma.SortOrder
  sub_field_id?: Prisma.SortOrder
  is_dynamic?: Prisma.SortOrder
  dynamic_config?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.PricingRuleCountOrderByAggregateInput
  _avg?: Prisma.PricingRuleAvgOrderByAggregateInput
  _max?: Prisma.PricingRuleMaxOrderByAggregateInput
  _min?: Prisma.PricingRuleMinOrderByAggregateInput
  _sum?: Prisma.PricingRuleSumOrderByAggregateInput
}

export type PricingRuleScalarWhereWithAggregatesInput = {
  AND?: Prisma.PricingRuleScalarWhereWithAggregatesInput | Prisma.PricingRuleScalarWhereWithAggregatesInput[]
  OR?: Prisma.PricingRuleScalarWhereWithAggregatesInput[]
  NOT?: Prisma.PricingRuleScalarWhereWithAggregatesInput | Prisma.PricingRuleScalarWhereWithAggregatesInput[]
  id?: Prisma.UuidWithAggregatesFilter<"PricingRule"> | string
  day_of_week?: Prisma.IntWithAggregatesFilter<"PricingRule"> | number
  start_time?: Prisma.DateTimeWithAggregatesFilter<"PricingRule"> | Date | string
  end_time?: Prisma.DateTimeWithAggregatesFilter<"PricingRule"> | Date | string
  base_price?: Prisma.DecimalWithAggregatesFilter<"PricingRule"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  sub_field_id?: Prisma.UuidWithAggregatesFilter<"PricingRule"> | string
  is_dynamic?: Prisma.BoolWithAggregatesFilter<"PricingRule"> | boolean
  dynamic_config?: Prisma.JsonNullableWithAggregatesFilter<"PricingRule">
}

export type PricingRuleCreateInput = {
  id?: string
  day_of_week: number
  start_time: Date | string
  end_time: Date | string
  base_price: runtime.Decimal | runtime.DecimalJsLike | number | string
  is_dynamic?: boolean
  dynamic_config?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  sub_field: Prisma.SubFieldCreateNestedOneWithoutPricing_rulesInput
}

export type PricingRuleUncheckedCreateInput = {
  id?: string
  day_of_week: number
  start_time: Date | string
  end_time: Date | string
  base_price: runtime.Decimal | runtime.DecimalJsLike | number | string
  sub_field_id: string
  is_dynamic?: boolean
  dynamic_config?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
}

export type PricingRuleUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  day_of_week?: Prisma.IntFieldUpdateOperationsInput | number
  start_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  end_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  base_price?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  is_dynamic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  dynamic_config?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  sub_field?: Prisma.SubFieldUpdateOneRequiredWithoutPricing_rulesNestedInput
}

export type PricingRuleUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  day_of_week?: Prisma.IntFieldUpdateOperationsInput | number
  start_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  end_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  base_price?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  sub_field_id?: Prisma.StringFieldUpdateOperationsInput | string
  is_dynamic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  dynamic_config?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
}

export type PricingRuleCreateManyInput = {
  id?: string
  day_of_week: number
  start_time: Date | string
  end_time: Date | string
  base_price: runtime.Decimal | runtime.DecimalJsLike | number | string
  sub_field_id: string
  is_dynamic?: boolean
  dynamic_config?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
}

export type PricingRuleUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  day_of_week?: Prisma.IntFieldUpdateOperationsInput | number
  start_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  end_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  base_price?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  is_dynamic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  dynamic_config?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
}

export type PricingRuleUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  day_of_week?: Prisma.IntFieldUpdateOperationsInput | number
  start_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  end_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  base_price?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  sub_field_id?: Prisma.StringFieldUpdateOperationsInput | string
  is_dynamic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  dynamic_config?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
}

export type PricingRuleListRelationFilter = {
  every?: Prisma.PricingRuleWhereInput
  some?: Prisma.PricingRuleWhereInput
  none?: Prisma.PricingRuleWhereInput
}

export type PricingRuleOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type PricingRuleSub_field_idDay_of_weekStart_timeEnd_timeCompoundUniqueInput = {
  sub_field_id: string
  day_of_week: number
  start_time: Date | string
  end_time: Date | string
}

export type PricingRuleCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  day_of_week?: Prisma.SortOrder
  start_time?: Prisma.SortOrder
  end_time?: Prisma.SortOrder
  base_price?: Prisma.SortOrder
  sub_field_id?: Prisma.SortOrder
  is_dynamic?: Prisma.SortOrder
  dynamic_config?: Prisma.SortOrder
}

export type PricingRuleAvgOrderByAggregateInput = {
  day_of_week?: Prisma.SortOrder
  base_price?: Prisma.SortOrder
}

export type PricingRuleMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  day_of_week?: Prisma.SortOrder
  start_time?: Prisma.SortOrder
  end_time?: Prisma.SortOrder
  base_price?: Prisma.SortOrder
  sub_field_id?: Prisma.SortOrder
  is_dynamic?: Prisma.SortOrder
}

export type PricingRuleMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  day_of_week?: Prisma.SortOrder
  start_time?: Prisma.SortOrder
  end_time?: Prisma.SortOrder
  base_price?: Prisma.SortOrder
  sub_field_id?: Prisma.SortOrder
  is_dynamic?: Prisma.SortOrder
}

export type PricingRuleSumOrderByAggregateInput = {
  day_of_week?: Prisma.SortOrder
  base_price?: Prisma.SortOrder
}

export type PricingRuleCreateNestedManyWithoutSub_fieldInput = {
  create?: Prisma.XOR<Prisma.PricingRuleCreateWithoutSub_fieldInput, Prisma.PricingRuleUncheckedCreateWithoutSub_fieldInput> | Prisma.PricingRuleCreateWithoutSub_fieldInput[] | Prisma.PricingRuleUncheckedCreateWithoutSub_fieldInput[]
  connectOrCreate?: Prisma.PricingRuleCreateOrConnectWithoutSub_fieldInput | Prisma.PricingRuleCreateOrConnectWithoutSub_fieldInput[]
  createMany?: Prisma.PricingRuleCreateManySub_fieldInputEnvelope
  connect?: Prisma.PricingRuleWhereUniqueInput | Prisma.PricingRuleWhereUniqueInput[]
}

export type PricingRuleUncheckedCreateNestedManyWithoutSub_fieldInput = {
  create?: Prisma.XOR<Prisma.PricingRuleCreateWithoutSub_fieldInput, Prisma.PricingRuleUncheckedCreateWithoutSub_fieldInput> | Prisma.PricingRuleCreateWithoutSub_fieldInput[] | Prisma.PricingRuleUncheckedCreateWithoutSub_fieldInput[]
  connectOrCreate?: Prisma.PricingRuleCreateOrConnectWithoutSub_fieldInput | Prisma.PricingRuleCreateOrConnectWithoutSub_fieldInput[]
  createMany?: Prisma.PricingRuleCreateManySub_fieldInputEnvelope
  connect?: Prisma.PricingRuleWhereUniqueInput | Prisma.PricingRuleWhereUniqueInput[]
}

export type PricingRuleUpdateManyWithoutSub_fieldNestedInput = {
  create?: Prisma.XOR<Prisma.PricingRuleCreateWithoutSub_fieldInput, Prisma.PricingRuleUncheckedCreateWithoutSub_fieldInput> | Prisma.PricingRuleCreateWithoutSub_fieldInput[] | Prisma.PricingRuleUncheckedCreateWithoutSub_fieldInput[]
  connectOrCreate?: Prisma.PricingRuleCreateOrConnectWithoutSub_fieldInput | Prisma.PricingRuleCreateOrConnectWithoutSub_fieldInput[]
  upsert?: Prisma.PricingRuleUpsertWithWhereUniqueWithoutSub_fieldInput | Prisma.PricingRuleUpsertWithWhereUniqueWithoutSub_fieldInput[]
  createMany?: Prisma.PricingRuleCreateManySub_fieldInputEnvelope
  set?: Prisma.PricingRuleWhereUniqueInput | Prisma.PricingRuleWhereUniqueInput[]
  disconnect?: Prisma.PricingRuleWhereUniqueInput | Prisma.PricingRuleWhereUniqueInput[]
  delete?: Prisma.PricingRuleWhereUniqueInput | Prisma.PricingRuleWhereUniqueInput[]
  connect?: Prisma.PricingRuleWhereUniqueInput | Prisma.PricingRuleWhereUniqueInput[]
  update?: Prisma.PricingRuleUpdateWithWhereUniqueWithoutSub_fieldInput | Prisma.PricingRuleUpdateWithWhereUniqueWithoutSub_fieldInput[]
  updateMany?: Prisma.PricingRuleUpdateManyWithWhereWithoutSub_fieldInput | Prisma.PricingRuleUpdateManyWithWhereWithoutSub_fieldInput[]
  deleteMany?: Prisma.PricingRuleScalarWhereInput | Prisma.PricingRuleScalarWhereInput[]
}

export type PricingRuleUncheckedUpdateManyWithoutSub_fieldNestedInput = {
  create?: Prisma.XOR<Prisma.PricingRuleCreateWithoutSub_fieldInput, Prisma.PricingRuleUncheckedCreateWithoutSub_fieldInput> | Prisma.PricingRuleCreateWithoutSub_fieldInput[] | Prisma.PricingRuleUncheckedCreateWithoutSub_fieldInput[]
  connectOrCreate?: Prisma.PricingRuleCreateOrConnectWithoutSub_fieldInput | Prisma.PricingRuleCreateOrConnectWithoutSub_fieldInput[]
  upsert?: Prisma.PricingRuleUpsertWithWhereUniqueWithoutSub_fieldInput | Prisma.PricingRuleUpsertWithWhereUniqueWithoutSub_fieldInput[]
  createMany?: Prisma.PricingRuleCreateManySub_fieldInputEnvelope
  set?: Prisma.PricingRuleWhereUniqueInput | Prisma.PricingRuleWhereUniqueInput[]
  disconnect?: Prisma.PricingRuleWhereUniqueInput | Prisma.PricingRuleWhereUniqueInput[]
  delete?: Prisma.PricingRuleWhereUniqueInput | Prisma.PricingRuleWhereUniqueInput[]
  connect?: Prisma.PricingRuleWhereUniqueInput | Prisma.PricingRuleWhereUniqueInput[]
  update?: Prisma.PricingRuleUpdateWithWhereUniqueWithoutSub_fieldInput | Prisma.PricingRuleUpdateWithWhereUniqueWithoutSub_fieldInput[]
  updateMany?: Prisma.PricingRuleUpdateManyWithWhereWithoutSub_fieldInput | Prisma.PricingRuleUpdateManyWithWhereWithoutSub_fieldInput[]
  deleteMany?: Prisma.PricingRuleScalarWhereInput | Prisma.PricingRuleScalarWhereInput[]
}

export type DecimalFieldUpdateOperationsInput = {
  set?: runtime.Decimal | runtime.DecimalJsLike | number | string
  increment?: runtime.Decimal | runtime.DecimalJsLike | number | string
  decrement?: runtime.Decimal | runtime.DecimalJsLike | number | string
  multiply?: runtime.Decimal | runtime.DecimalJsLike | number | string
  divide?: runtime.Decimal | runtime.DecimalJsLike | number | string
}

export type PricingRuleCreateWithoutSub_fieldInput = {
  id?: string
  day_of_week: number
  start_time: Date | string
  end_time: Date | string
  base_price: runtime.Decimal | runtime.DecimalJsLike | number | string
  is_dynamic?: boolean
  dynamic_config?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
}

export type PricingRuleUncheckedCreateWithoutSub_fieldInput = {
  id?: string
  day_of_week: number
  start_time: Date | string
  end_time: Date | string
  base_price: runtime.Decimal | runtime.DecimalJsLike | number | string
  is_dynamic?: boolean
  dynamic_config?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
}

export type PricingRuleCreateOrConnectWithoutSub_fieldInput = {
  where: Prisma.PricingRuleWhereUniqueInput
  create: Prisma.XOR<Prisma.PricingRuleCreateWithoutSub_fieldInput, Prisma.PricingRuleUncheckedCreateWithoutSub_fieldInput>
}

export type PricingRuleCreateManySub_fieldInputEnvelope = {
  data: Prisma.PricingRuleCreateManySub_fieldInput | Prisma.PricingRuleCreateManySub_fieldInput[]
  skipDuplicates?: boolean
}

export type PricingRuleUpsertWithWhereUniqueWithoutSub_fieldInput = {
  where: Prisma.PricingRuleWhereUniqueInput
  update: Prisma.XOR<Prisma.PricingRuleUpdateWithoutSub_fieldInput, Prisma.PricingRuleUncheckedUpdateWithoutSub_fieldInput>
  create: Prisma.XOR<Prisma.PricingRuleCreateWithoutSub_fieldInput, Prisma.PricingRuleUncheckedCreateWithoutSub_fieldInput>
}

export type PricingRuleUpdateWithWhereUniqueWithoutSub_fieldInput = {
  where: Prisma.PricingRuleWhereUniqueInput
  data: Prisma.XOR<Prisma.PricingRuleUpdateWithoutSub_fieldInput, Prisma.PricingRuleUncheckedUpdateWithoutSub_fieldInput>
}

export type PricingRuleUpdateManyWithWhereWithoutSub_fieldInput = {
  where: Prisma.PricingRuleScalarWhereInput
  data: Prisma.XOR<Prisma.PricingRuleUpdateManyMutationInput, Prisma.PricingRuleUncheckedUpdateManyWithoutSub_fieldInput>
}

export type PricingRuleScalarWhereInput = {
  AND?: Prisma.PricingRuleScalarWhereInput | Prisma.PricingRuleScalarWhereInput[]
  OR?: Prisma.PricingRuleScalarWhereInput[]
  NOT?: Prisma.PricingRuleScalarWhereInput | Prisma.PricingRuleScalarWhereInput[]
  id?: Prisma.UuidFilter<"PricingRule"> | string
  day_of_week?: Prisma.IntFilter<"PricingRule"> | number
  start_time?: Prisma.DateTimeFilter<"PricingRule"> | Date | string
  end_time?: Prisma.DateTimeFilter<"PricingRule"> | Date | string
  base_price?: Prisma.DecimalFilter<"PricingRule"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  sub_field_id?: Prisma.UuidFilter<"PricingRule"> | string
  is_dynamic?: Prisma.BoolFilter<"PricingRule"> | boolean
  dynamic_config?: Prisma.JsonNullableFilter<"PricingRule">
}

export type PricingRuleCreateManySub_fieldInput = {
  id?: string
  day_of_week: number
  start_time: Date | string
  end_time: Date | string
  base_price: runtime.Decimal | runtime.DecimalJsLike | number | string
  is_dynamic?: boolean
  dynamic_config?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
}

export type PricingRuleUpdateWithoutSub_fieldInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  day_of_week?: Prisma.IntFieldUpdateOperationsInput | number
  start_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  end_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  base_price?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  is_dynamic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  dynamic_config?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
}

export type PricingRuleUncheckedUpdateWithoutSub_fieldInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  day_of_week?: Prisma.IntFieldUpdateOperationsInput | number
  start_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  end_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  base_price?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  is_dynamic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  dynamic_config?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
}

export type PricingRuleUncheckedUpdateManyWithoutSub_fieldInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  day_of_week?: Prisma.IntFieldUpdateOperationsInput | number
  start_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  end_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  base_price?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  is_dynamic?: Prisma.BoolFieldUpdateOperationsInput | boolean
  dynamic_config?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
}



export type PricingRuleSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  day_of_week?: boolean
  start_time?: boolean
  end_time?: boolean
  base_price?: boolean
  sub_field_id?: boolean
  is_dynamic?: boolean
  dynamic_config?: boolean
  sub_field?: boolean | Prisma.SubFieldDefaultArgs<ExtArgs>
}, ExtArgs["result"]["pricingRule"]>

export type PricingRuleSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  day_of_week?: boolean
  start_time?: boolean
  end_time?: boolean
  base_price?: boolean
  sub_field_id?: boolean
  is_dynamic?: boolean
  dynamic_config?: boolean
  sub_field?: boolean | Prisma.SubFieldDefaultArgs<ExtArgs>
}, ExtArgs["result"]["pricingRule"]>

export type PricingRuleSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  day_of_week?: boolean
  start_time?: boolean
  end_time?: boolean
  base_price?: boolean
  sub_field_id?: boolean
  is_dynamic?: boolean
  dynamic_config?: boolean
  sub_field?: boolean | Prisma.SubFieldDefaultArgs<ExtArgs>
}, ExtArgs["result"]["pricingRule"]>

export type PricingRuleSelectScalar = {
  id?: boolean
  day_of_week?: boolean
  start_time?: boolean
  end_time?: boolean
  base_price?: boolean
  sub_field_id?: boolean
  is_dynamic?: boolean
  dynamic_config?: boolean
}

export type PricingRuleOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "day_of_week" | "start_time" | "end_time" | "base_price" | "sub_field_id" | "is_dynamic" | "dynamic_config", ExtArgs["result"]["pricingRule"]>
export type PricingRuleInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  sub_field?: boolean | Prisma.SubFieldDefaultArgs<ExtArgs>
}
export type PricingRuleIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  sub_field?: boolean | Prisma.SubFieldDefaultArgs<ExtArgs>
}
export type PricingRuleIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  sub_field?: boolean | Prisma.SubFieldDefaultArgs<ExtArgs>
}

export type $PricingRulePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "PricingRule"
  objects: {
    sub_field: Prisma.$SubFieldPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    day_of_week: number
    start_time: Date
    end_time: Date
    base_price: runtime.Decimal
    sub_field_id: string
    is_dynamic: boolean
    dynamic_config: runtime.JsonValue | null
  }, ExtArgs["result"]["pricingRule"]>
  composites: {}
}

export type PricingRuleGetPayload<S extends boolean | null | undefined | PricingRuleDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$PricingRulePayload, S>

export type PricingRuleCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<PricingRuleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: PricingRuleCountAggregateInputType | true
  }

export interface PricingRuleDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PricingRule'], meta: { name: 'PricingRule' } }
  /**
   * Find zero or one PricingRule that matches the filter.
   * @param {PricingRuleFindUniqueArgs} args - Arguments to find a PricingRule
   * @example
   * // Get one PricingRule
   * const pricingRule = await prisma.pricingRule.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends PricingRuleFindUniqueArgs>(args: Prisma.SelectSubset<T, PricingRuleFindUniqueArgs<ExtArgs>>): Prisma.Prisma__PricingRuleClient<runtime.Types.Result.GetResult<Prisma.$PricingRulePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one PricingRule that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {PricingRuleFindUniqueOrThrowArgs} args - Arguments to find a PricingRule
   * @example
   * // Get one PricingRule
   * const pricingRule = await prisma.pricingRule.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends PricingRuleFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, PricingRuleFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__PricingRuleClient<runtime.Types.Result.GetResult<Prisma.$PricingRulePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first PricingRule that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PricingRuleFindFirstArgs} args - Arguments to find a PricingRule
   * @example
   * // Get one PricingRule
   * const pricingRule = await prisma.pricingRule.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends PricingRuleFindFirstArgs>(args?: Prisma.SelectSubset<T, PricingRuleFindFirstArgs<ExtArgs>>): Prisma.Prisma__PricingRuleClient<runtime.Types.Result.GetResult<Prisma.$PricingRulePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first PricingRule that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PricingRuleFindFirstOrThrowArgs} args - Arguments to find a PricingRule
   * @example
   * // Get one PricingRule
   * const pricingRule = await prisma.pricingRule.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends PricingRuleFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, PricingRuleFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__PricingRuleClient<runtime.Types.Result.GetResult<Prisma.$PricingRulePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more PricingRules that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PricingRuleFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all PricingRules
   * const pricingRules = await prisma.pricingRule.findMany()
   * 
   * // Get first 10 PricingRules
   * const pricingRules = await prisma.pricingRule.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const pricingRuleWithIdOnly = await prisma.pricingRule.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends PricingRuleFindManyArgs>(args?: Prisma.SelectSubset<T, PricingRuleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PricingRulePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a PricingRule.
   * @param {PricingRuleCreateArgs} args - Arguments to create a PricingRule.
   * @example
   * // Create one PricingRule
   * const PricingRule = await prisma.pricingRule.create({
   *   data: {
   *     // ... data to create a PricingRule
   *   }
   * })
   * 
   */
  create<T extends PricingRuleCreateArgs>(args: Prisma.SelectSubset<T, PricingRuleCreateArgs<ExtArgs>>): Prisma.Prisma__PricingRuleClient<runtime.Types.Result.GetResult<Prisma.$PricingRulePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many PricingRules.
   * @param {PricingRuleCreateManyArgs} args - Arguments to create many PricingRules.
   * @example
   * // Create many PricingRules
   * const pricingRule = await prisma.pricingRule.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends PricingRuleCreateManyArgs>(args?: Prisma.SelectSubset<T, PricingRuleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many PricingRules and returns the data saved in the database.
   * @param {PricingRuleCreateManyAndReturnArgs} args - Arguments to create many PricingRules.
   * @example
   * // Create many PricingRules
   * const pricingRule = await prisma.pricingRule.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many PricingRules and only return the `id`
   * const pricingRuleWithIdOnly = await prisma.pricingRule.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends PricingRuleCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, PricingRuleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PricingRulePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a PricingRule.
   * @param {PricingRuleDeleteArgs} args - Arguments to delete one PricingRule.
   * @example
   * // Delete one PricingRule
   * const PricingRule = await prisma.pricingRule.delete({
   *   where: {
   *     // ... filter to delete one PricingRule
   *   }
   * })
   * 
   */
  delete<T extends PricingRuleDeleteArgs>(args: Prisma.SelectSubset<T, PricingRuleDeleteArgs<ExtArgs>>): Prisma.Prisma__PricingRuleClient<runtime.Types.Result.GetResult<Prisma.$PricingRulePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one PricingRule.
   * @param {PricingRuleUpdateArgs} args - Arguments to update one PricingRule.
   * @example
   * // Update one PricingRule
   * const pricingRule = await prisma.pricingRule.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends PricingRuleUpdateArgs>(args: Prisma.SelectSubset<T, PricingRuleUpdateArgs<ExtArgs>>): Prisma.Prisma__PricingRuleClient<runtime.Types.Result.GetResult<Prisma.$PricingRulePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more PricingRules.
   * @param {PricingRuleDeleteManyArgs} args - Arguments to filter PricingRules to delete.
   * @example
   * // Delete a few PricingRules
   * const { count } = await prisma.pricingRule.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends PricingRuleDeleteManyArgs>(args?: Prisma.SelectSubset<T, PricingRuleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more PricingRules.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PricingRuleUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many PricingRules
   * const pricingRule = await prisma.pricingRule.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends PricingRuleUpdateManyArgs>(args: Prisma.SelectSubset<T, PricingRuleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more PricingRules and returns the data updated in the database.
   * @param {PricingRuleUpdateManyAndReturnArgs} args - Arguments to update many PricingRules.
   * @example
   * // Update many PricingRules
   * const pricingRule = await prisma.pricingRule.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more PricingRules and only return the `id`
   * const pricingRuleWithIdOnly = await prisma.pricingRule.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends PricingRuleUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, PricingRuleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PricingRulePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one PricingRule.
   * @param {PricingRuleUpsertArgs} args - Arguments to update or create a PricingRule.
   * @example
   * // Update or create a PricingRule
   * const pricingRule = await prisma.pricingRule.upsert({
   *   create: {
   *     // ... data to create a PricingRule
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the PricingRule we want to update
   *   }
   * })
   */
  upsert<T extends PricingRuleUpsertArgs>(args: Prisma.SelectSubset<T, PricingRuleUpsertArgs<ExtArgs>>): Prisma.Prisma__PricingRuleClient<runtime.Types.Result.GetResult<Prisma.$PricingRulePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of PricingRules.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PricingRuleCountArgs} args - Arguments to filter PricingRules to count.
   * @example
   * // Count the number of PricingRules
   * const count = await prisma.pricingRule.count({
   *   where: {
   *     // ... the filter for the PricingRules we want to count
   *   }
   * })
  **/
  count<T extends PricingRuleCountArgs>(
    args?: Prisma.Subset<T, PricingRuleCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], PricingRuleCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a PricingRule.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PricingRuleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends PricingRuleAggregateArgs>(args: Prisma.Subset<T, PricingRuleAggregateArgs>): Prisma.PrismaPromise<GetPricingRuleAggregateType<T>>

  /**
   * Group by PricingRule.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PricingRuleGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends PricingRuleGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: PricingRuleGroupByArgs['orderBy'] }
      : { orderBy?: PricingRuleGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, PricingRuleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPricingRuleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the PricingRule model
 */
readonly fields: PricingRuleFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for PricingRule.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__PricingRuleClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  sub_field<T extends Prisma.SubFieldDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.SubFieldDefaultArgs<ExtArgs>>): Prisma.Prisma__SubFieldClient<runtime.Types.Result.GetResult<Prisma.$SubFieldPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the PricingRule model
 */
export interface PricingRuleFieldRefs {
  readonly id: Prisma.FieldRef<"PricingRule", 'String'>
  readonly day_of_week: Prisma.FieldRef<"PricingRule", 'Int'>
  readonly start_time: Prisma.FieldRef<"PricingRule", 'DateTime'>
  readonly end_time: Prisma.FieldRef<"PricingRule", 'DateTime'>
  readonly base_price: Prisma.FieldRef<"PricingRule", 'Decimal'>
  readonly sub_field_id: Prisma.FieldRef<"PricingRule", 'String'>
  readonly is_dynamic: Prisma.FieldRef<"PricingRule", 'Boolean'>
  readonly dynamic_config: Prisma.FieldRef<"PricingRule", 'Json'>
}
    

// Custom InputTypes
/**
 * PricingRule findUnique
 */
export type PricingRuleFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PricingRule
   */
  select?: Prisma.PricingRuleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PricingRule
   */
  omit?: Prisma.PricingRuleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PricingRuleInclude<ExtArgs> | null
  /**
   * Filter, which PricingRule to fetch.
   */
  where: Prisma.PricingRuleWhereUniqueInput
}

/**
 * PricingRule findUniqueOrThrow
 */
export type PricingRuleFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PricingRule
   */
  select?: Prisma.PricingRuleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PricingRule
   */
  omit?: Prisma.PricingRuleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PricingRuleInclude<ExtArgs> | null
  /**
   * Filter, which PricingRule to fetch.
   */
  where: Prisma.PricingRuleWhereUniqueInput
}

/**
 * PricingRule findFirst
 */
export type PricingRuleFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PricingRule
   */
  select?: Prisma.PricingRuleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PricingRule
   */
  omit?: Prisma.PricingRuleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PricingRuleInclude<ExtArgs> | null
  /**
   * Filter, which PricingRule to fetch.
   */
  where?: Prisma.PricingRuleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PricingRules to fetch.
   */
  orderBy?: Prisma.PricingRuleOrderByWithRelationInput | Prisma.PricingRuleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for PricingRules.
   */
  cursor?: Prisma.PricingRuleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PricingRules from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PricingRules.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of PricingRules.
   */
  distinct?: Prisma.PricingRuleScalarFieldEnum | Prisma.PricingRuleScalarFieldEnum[]
}

/**
 * PricingRule findFirstOrThrow
 */
export type PricingRuleFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PricingRule
   */
  select?: Prisma.PricingRuleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PricingRule
   */
  omit?: Prisma.PricingRuleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PricingRuleInclude<ExtArgs> | null
  /**
   * Filter, which PricingRule to fetch.
   */
  where?: Prisma.PricingRuleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PricingRules to fetch.
   */
  orderBy?: Prisma.PricingRuleOrderByWithRelationInput | Prisma.PricingRuleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for PricingRules.
   */
  cursor?: Prisma.PricingRuleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PricingRules from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PricingRules.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of PricingRules.
   */
  distinct?: Prisma.PricingRuleScalarFieldEnum | Prisma.PricingRuleScalarFieldEnum[]
}

/**
 * PricingRule findMany
 */
export type PricingRuleFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PricingRule
   */
  select?: Prisma.PricingRuleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PricingRule
   */
  omit?: Prisma.PricingRuleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PricingRuleInclude<ExtArgs> | null
  /**
   * Filter, which PricingRules to fetch.
   */
  where?: Prisma.PricingRuleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PricingRules to fetch.
   */
  orderBy?: Prisma.PricingRuleOrderByWithRelationInput | Prisma.PricingRuleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing PricingRules.
   */
  cursor?: Prisma.PricingRuleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PricingRules from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PricingRules.
   */
  skip?: number
  distinct?: Prisma.PricingRuleScalarFieldEnum | Prisma.PricingRuleScalarFieldEnum[]
}

/**
 * PricingRule create
 */
export type PricingRuleCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PricingRule
   */
  select?: Prisma.PricingRuleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PricingRule
   */
  omit?: Prisma.PricingRuleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PricingRuleInclude<ExtArgs> | null
  /**
   * The data needed to create a PricingRule.
   */
  data: Prisma.XOR<Prisma.PricingRuleCreateInput, Prisma.PricingRuleUncheckedCreateInput>
}

/**
 * PricingRule createMany
 */
export type PricingRuleCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many PricingRules.
   */
  data: Prisma.PricingRuleCreateManyInput | Prisma.PricingRuleCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * PricingRule createManyAndReturn
 */
export type PricingRuleCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PricingRule
   */
  select?: Prisma.PricingRuleSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the PricingRule
   */
  omit?: Prisma.PricingRuleOmit<ExtArgs> | null
  /**
   * The data used to create many PricingRules.
   */
  data: Prisma.PricingRuleCreateManyInput | Prisma.PricingRuleCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PricingRuleIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * PricingRule update
 */
export type PricingRuleUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PricingRule
   */
  select?: Prisma.PricingRuleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PricingRule
   */
  omit?: Prisma.PricingRuleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PricingRuleInclude<ExtArgs> | null
  /**
   * The data needed to update a PricingRule.
   */
  data: Prisma.XOR<Prisma.PricingRuleUpdateInput, Prisma.PricingRuleUncheckedUpdateInput>
  /**
   * Choose, which PricingRule to update.
   */
  where: Prisma.PricingRuleWhereUniqueInput
}

/**
 * PricingRule updateMany
 */
export type PricingRuleUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update PricingRules.
   */
  data: Prisma.XOR<Prisma.PricingRuleUpdateManyMutationInput, Prisma.PricingRuleUncheckedUpdateManyInput>
  /**
   * Filter which PricingRules to update
   */
  where?: Prisma.PricingRuleWhereInput
  /**
   * Limit how many PricingRules to update.
   */
  limit?: number
}

/**
 * PricingRule updateManyAndReturn
 */
export type PricingRuleUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PricingRule
   */
  select?: Prisma.PricingRuleSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the PricingRule
   */
  omit?: Prisma.PricingRuleOmit<ExtArgs> | null
  /**
   * The data used to update PricingRules.
   */
  data: Prisma.XOR<Prisma.PricingRuleUpdateManyMutationInput, Prisma.PricingRuleUncheckedUpdateManyInput>
  /**
   * Filter which PricingRules to update
   */
  where?: Prisma.PricingRuleWhereInput
  /**
   * Limit how many PricingRules to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PricingRuleIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * PricingRule upsert
 */
export type PricingRuleUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PricingRule
   */
  select?: Prisma.PricingRuleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PricingRule
   */
  omit?: Prisma.PricingRuleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PricingRuleInclude<ExtArgs> | null
  /**
   * The filter to search for the PricingRule to update in case it exists.
   */
  where: Prisma.PricingRuleWhereUniqueInput
  /**
   * In case the PricingRule found by the `where` argument doesn't exist, create a new PricingRule with this data.
   */
  create: Prisma.XOR<Prisma.PricingRuleCreateInput, Prisma.PricingRuleUncheckedCreateInput>
  /**
   * In case the PricingRule was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.PricingRuleUpdateInput, Prisma.PricingRuleUncheckedUpdateInput>
}

/**
 * PricingRule delete
 */
export type PricingRuleDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PricingRule
   */
  select?: Prisma.PricingRuleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PricingRule
   */
  omit?: Prisma.PricingRuleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PricingRuleInclude<ExtArgs> | null
  /**
   * Filter which PricingRule to delete.
   */
  where: Prisma.PricingRuleWhereUniqueInput
}

/**
 * PricingRule deleteMany
 */
export type PricingRuleDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which PricingRules to delete
   */
  where?: Prisma.PricingRuleWhereInput
  /**
   * Limit how many PricingRules to delete.
   */
  limit?: number
}

/**
 * PricingRule without action
 */
export type PricingRuleDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PricingRule
   */
  select?: Prisma.PricingRuleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PricingRule
   */
  omit?: Prisma.PricingRuleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PricingRuleInclude<ExtArgs> | null
}
